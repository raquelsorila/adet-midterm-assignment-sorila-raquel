@model IEnumerable<TaskListing.Models.TaskList>

<center>
    <a asp-action="Upsert" asp-controller="Task" style="font-family:Cambria; font-size:15px">CREATE A TASK</a>
</center>
@foreach (var task in Model)
{
    <div class="task-card">
        <div class="task-card--header" style="font-family:Cambria; color:black; font-size:12px">

            <p style="font-size: 15px;">
                Task Title: @Html.DisplayFor(taskItem => task.TaskName)<br>
                Status: @Html.DisplayFor(taskItem => task.TaskStatus)<br>
                <a asp-action="Upsert" asp-controller="Task" asp-route-id="@task.Id" style="color:Red; "> Update </a>
            </p>
            <form asp-action="Delete" asp-route-id="@task.Id" method="post" style=" margin-left: 330px;">
                <button type="submit" onclick="return confirm('Delete Task?')">Delete</button>
            </form>
            @if (task.TaskStatus != "Finished")
            {
                <form asp-action="ChangeState" asp-route-id="@task.Id" method="post">
                    <button type="submit">@(task.TaskStatus != "To Do" ? "Done" : "Start")</button>

                </form>
            }


            <button class="details--button" onclick="toggleHide(this.id)" id="details--@task.Id"> Details </button>
        </div>

        <div class="task-card--details hidden" id="dropdown--details--@task.Id" style="font-family:Cambria; color:black; font-size:12px">
            <span>Date Created: @Html.DisplayFor(taskItem => task.DateCreated)</span>
            @if (task.TaskStatus != "To Do")
            {
                <span>Date Started: @Html.DisplayFor(taskItem => task.DateStarted)</span>
            }
            @if (task.TaskStatus == "Finished")
            {
                <span>Date Finished: @Html.DisplayFor(taskItem => task.DateFinished)</span>
                <span>Total Hours: @Html.DisplayFor(taskItem => task.TotalHours)</span>
            }

        </div>
    </div>
}
